name: deploy

on:
  push:
    branches:
      - qa
  pull_request:
    branches:
      - qa

env:
  IMAGE_NAME: ${{ github.base_ref }}:${{ github.sha }}
  API_PORT: ${{ secrets.API_PORT }}
  API_URL: ${{ secrets.API_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NODE_ENV: ${{ secrets.NODE_ENV }}

jobs:
  build:
    runs-on: qa-fpx-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          echo "IMAGE=${{ env.IMAGE_NAME }}"
          docker build -t ${{ env.IMAGE_NAME }} .

  push:
    runs-on: qa-fpx-server
    needs: build
    steps:
      - name: Push Docker image
        run: |
          echo "Efetuando o push da imagem Docker: ${{ env.IMAGE_NAME }}"
          docker tag ${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}
          docker push ${{ env.IMAGE_NAME }}    
      

  test:
    runs-on: qa-fpx-server
    needs: push
    steps:
      - name: Run tests
        run: |
          echo "Rodando os testes com Jest. Aguarde..."
          docker run --rm ${{ env.IMAGE_NAME }} pnpm test

  deploy:
    runs-on: qa-fpx-server
    needs: test
    steps:
      - name: Deploy application
        run: |
          echo "Efetuando deploy da aplicação..."
          echo "Imagem atual: $IMAGE"
          docker compose -f ./docker-compose.yml down --remove-orphans
          docker compose -f ./docker-compose.yml up -d
