generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  name       String
  email      String    @unique
  created_at DateTime? @default(now())
  orders     Order[]
}

model Payment {
  id             String        @id @default(cuid())
  type           String
  payment_method PaymentMethod
  value          Float
  order          Order?
  created_at     DateTime?     @default(now())
}

model Order {
  id         String    @id @default(cuid())
  payment_id String    @unique
  user_id    String
  cart_id    String    @unique
  cart       Cart      @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  payment    Payment   @relation(fields: [payment_id], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  created_at DateTime? @default(now())
}

model ItemCart {
  id         String    @id @default(cuid())
  product_id String
  amount     Int
  cart_id    String
  cart       Cart      @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  product    Product   @relation(fields: [product_id], references: [id], onDelete: Cascade)
  created_at DateTime? @default(now())
}

model Cart {
  id         String     @id @default(cuid())
  items_cart ItemCart[]
  order      Order?
  created_at DateTime?  @default(now())
}

model Product {
  id         String     @id @default(cuid())
  name       String
  price      Float
  items_cart ItemCart[]
  created_at DateTime?  @default(now())
}

enum PaymentMethod {
  PIX
  CREDIT
  DEBIT
  WALLET
}
